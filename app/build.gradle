plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def getApiKey() {
    def propFile = project.rootProject.file('local.properties')
    def properties = new Properties()
    properties.load(propFile.newDataInputStream())
    return properties['TWITCH_CLIENT_ID']
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.twitchapp"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "com.example.android.dagger.CustomTestRunner"

        buildConfigField ("String", "CLIENT_ID", getApiKey())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
    testOptions {
        // Unit Test でRobolectricを使うために必要
        unitTests.includeAndroidResources = true
    }
}

configurations {
    ktlint
}

dependencies {

    implementation uiDependencies.appCompat
    implementation uiDependencies.material
    implementation uiDependencies.constraintlayout

    implementation livedataDependencies.lifecycleLivedataKtx
    implementation livedataDependencies.lifecycleExtensions

    implementation apiDependencies.retrofit
    implementation apiDependencies.moshiConverter
    implementation apiDependencies.loggingInterceptor
    implementation apiDependencies.moshi
    implementation apiDependencies.moshiKotlin

    implementation uiDependencies.glide
    implementation uiDependencies.recyclerView
    implementation uiDependencies.activityKtx
    implementation uiDependencies.fragmentKtx
    implementation uiDependencies.circleImageView
    implementation uiDependencies.chromeCustomTabs
    implementation uiDependencies.paging

    implementation dbDependencies.roomRuntime
    kapt dbDependencies.roomCompiler
    implementation dbDependencies.roomKtx

    implementation coroutinesDependencies.coroutinesCore
    implementation coroutinesDependencies.lifecycleRuntimeKtx

    implementation navigationDependencies.navigationFragment
    implementation navigationDependencies.navigationUi
    implementation navigationDependencies.navigationFragmentKtx
    implementation navigationDependencies.navigationUiKtx

    implementation diDependencies.hilt
    kapt diDependencies.hiltAndroidCompiler
    implementation diDependencies.hiltLifecycleViewModel
    kapt diDependencies.hiltCompiler

    testImplementation testDependencies.junitKtx
    testImplementation testDependencies.coreKtx
    testImplementation testDependencies.robolectric
    testImplementation testDependencies.coreTesting
    testImplementation testDependencies.coroutinesTest
    testImplementation testDependencies.truth

    testImplementation "io.mockk:mockk:1.12.2"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.2"

    // ktlint
    ktlint("com.pinterest:ktlint:0.42.1")
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--android", "--color", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint-result.xml", "src/**/*.kt"
    ignoreExitValue true
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
