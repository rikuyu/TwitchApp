plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

def getApiKey() {
    def propFile = project.rootProject.file('local.properties')
    def properties = new Properties()
    properties.load(propFile.newDataInputStream())
    return properties['TWITCH_CLIENT_ID']
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.twitchapp"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "com.example.android.dagger.CustomTestRunner"

        buildConfigField ("String", "CLIENT_ID", getApiKey())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
    testOptions {
        // Unit Test でRobolectricを使うために必要
        unitTests.includeAndroidResources = true
    }
}

configurations {
    ktlint
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.ar:core:1.29.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    testImplementation "android.arch.core:core-testing:1.1.1"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // Moshi
    def moshi_version = "1.11.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Room
    def room_version = "2.4.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'

    // Navigation
    def navigation_x_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_x_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_x_version"
    def navigtion_version = "1.0.0"
    implementation "android.arch.navigation:navigation-fragment:$navigtion_version"
    implementation "android.arch.navigation:navigation-ui:$navigtion_version"

    // fragment-ktx
    implementation "androidx.fragment:fragment-ktx:1.4.0"

    // Activity Result API
    implementation 'androidx.activity:activity-ktx:1.4.0'

    // CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Dagger-Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    androidTestImplementation "com.google.dagger:hilt-android-testing:1.0.0"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.38.1"

    // Chrome Custom Tabs
    implementation "androidx.browser:browser:1.4.0"

    // Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.0"

    // Unit Test
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "org.robolectric:robolectric:4.7.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    testImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'

    // instrumented unit tests
    androidTestImplementation "junit:junit:4.13.2"
    debugImplementation "androidx.fragment:fragment-testing:1.4.0"

    testImplementation 'org.robolectric:robolectric:4.7.3'

    // For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.28-alpha'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.38.1'

    // Truth
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // ktlint
    ktlint("com.pinterest:ktlint:0.42.1")
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "--android", "--color", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint-result.xml", "src/**/*.kt"
    ignoreExitValue true
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
